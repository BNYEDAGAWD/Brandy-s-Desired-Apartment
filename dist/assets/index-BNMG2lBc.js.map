{"version":3,"file":"index-BNMG2lBc.js","sources":["../../js/search-engine.js","../../js/scoring.js","../../js/ui-components.js","../../js/app.js","../../api/claude-integration.js"],"sourcesContent":["export class ApartmentSearchEngine {\n    constructor() {\n        this.searchCriteria = {\n            minRent: 4400,\n            maxRent: 5200,\n            bedrooms: 2,\n            minBathrooms: 1.5,\n            maxBathrooms: 2.0,\n            zipCodes: ['90066', '90230', '90232', '90034'],\n            zipCodePriority: {\n                '90066': 1, // Mar Vista - highest priority\n                '90230': 2, // Central Culver City\n                '90232': 3, // Southeast Culver City\n                '90034': 4  // Palms\n            },\n            requiredAmenities: [\n                'washer_dryer',\n                'air_conditioning',\n                'outdoor_space',\n                'above_ground_floor'\n            ],\n            preferredFeatures: [\n                'recently_renovated',\n                'modern_interior',\n                'natural_light'\n            ]\n        };\n        \n        this.dataSources = [\n            { name: 'apartments.com', priority: 1, active: true },\n            { name: 'westside_rentals', priority: 1, active: true },\n            { name: 'zillow', priority: 1, active: true },\n            { name: 'trulia', priority: 2, active: true },\n            { name: 'hotpads', priority: 2, active: true },\n            { name: 'redfin', priority: 2, active: true },\n            { name: 'rentcafe', priority: 2, active: true },\n            { name: 'zumper', priority: 2, active: true },\n            { name: 'realtor.com', priority: 2, active: true },\n            { name: 'craigslist', priority: 3, active: true }\n        ];\n        \n        // Scoring will be handled by external module\n    }\n\n    async searchApartments(progressCallback) {\n        const allApartments = [];\n        let currentProgress = 0;\n        const totalSteps = this.searchCriteria.zipCodes.length + 1; // +1 for final scoring\n        \n        // Search each zip code\n        for (let i = 0; i < this.searchCriteria.zipCodes.length; i++) {\n            const zipCode = this.searchCriteria.zipCodes[i];\n            \n            if (progressCallback) {\n                progressCallback((i / totalSteps) * 100);\n            }\n            \n            try {\n                const apartments = await this.searchZipCode(zipCode);\n                allApartments.push(...apartments);\n                \n                // Add small delay to prevent overwhelming APIs\n                await this.delay(500);\n            } catch (error) {\n                console.error(`Error searching zip code ${zipCode}:`, error);\n            }\n        }\n        \n        // Final scoring and ranking\n        if (progressCallback) {\n            progressCallback(((totalSteps - 1) / totalSteps) * 100);\n        }\n        \n        // Return apartments without scoring (will be handled by caller)\n        const validApartments = allApartments.filter(apt => this.validateApartment(apt));\n        \n        if (progressCallback) {\n            progressCallback(100);\n        }\n        \n        return this.removeDuplicates(validApartments);\n    }\n\n    async searchZipCode(zipCode) {\n        console.log(`Searching zip code: ${zipCode}`);\n        \n        // Since we can't actually call external APIs in this demo,\n        // we'll generate realistic mock data based on the zip code\n        return this.generateMockApartments(zipCode);\n    }\n\n    generateMockApartments(zipCode) {\n        const apartmentCount = Math.floor(Math.random() * 15) + 5; // 5-20 apartments per zip\n        const apartments = [];\n        \n        // Zip code specific data\n        const zipCodeData = {\n            '90066': { // Mar Vista\n                areaName: 'Mar Vista',\n                basePrice: 4800,\n                priceVariance: 300,\n                neighborhoods: ['Mar Vista', 'Venice Adjacent', 'Westside']\n            },\n            '90230': { // Central Culver City\n                areaName: 'Culver City',\n                basePrice: 4600,\n                priceVariance: 400,\n                neighborhoods: ['Downtown Culver City', 'Arts District', 'Hayden Tract']\n            },\n            '90232': { // Southeast Culver City\n                areaName: 'Culver City',\n                basePrice: 4500,\n                priceVariance: 350,\n                neighborhoods: ['Fox Hills', 'Culver West', 'Baldwin Hills Adjacent']\n            },\n            '90034': { // Palms\n                areaName: 'Palms',\n                basePrice: 4400,\n                priceVariance: 300,\n                neighborhoods: ['Palms', 'Motor Avenue', 'Mid City West']\n            }\n        };\n        \n        const areaData = zipCodeData[zipCode];\n        const streetNames = [\n            'Pacific Ave', 'Lincoln Blvd', 'Venice Blvd', 'Washington Blvd',\n            'Motor Ave', 'Sepulveda Blvd', 'Culver Blvd', 'Jefferson Blvd',\n            'Pico Blvd', 'Olympic Blvd', 'Exposition Blvd', 'National Blvd'\n        ];\n        \n        const buildingTypes = [\n            'Modern Apartment Complex', 'Luxury Townhome', 'Contemporary Loft',\n            'Garden Style Apartment', 'Mid-Rise Building', 'Renovated Complex'\n        ];\n        \n        const amenityPool = [\n            'In-Unit Washer/Dryer', 'Central Air Conditioning', 'Private Balcony',\n            'Stainless Steel Appliances', 'Hardwood Floors', 'Walk-in Closet',\n            'Granite Countertops', 'Swimming Pool', 'Fitness Center', 'Parking Garage',\n            'Pet Friendly', 'Dishwasher', 'Recently Renovated', 'Natural Light',\n            'High Ceilings', 'Modern Kitchen', 'Patio/Deck', 'Storage Unit'\n        ];\n        \n        for (let i = 0; i < apartmentCount; i++) {\n            const buildingNumber = Math.floor(Math.random() * 9999) + 1000;\n            const streetName = streetNames[Math.floor(Math.random() * streetNames.length)];\n            const buildingType = buildingTypes[Math.floor(Math.random() * buildingTypes.length)];\n            \n            // Price calculation with some variance\n            const basePrice = areaData.basePrice;\n            const priceOffset = (Math.random() - 0.5) * areaData.priceVariance * 2;\n            const price = Math.round((basePrice + priceOffset) / 50) * 50; // Round to nearest $50\n            \n            // Ensure price is within budget\n            const finalPrice = Math.max(4400, Math.min(5200, price));\n            \n            // Random but realistic features\n            const selectedAmenities = this.selectRandomAmenities(amenityPool, 8, 12);\n            const floor = Math.floor(Math.random() * 8) + 2; // Floors 2-9 (above ground)\n            const sqft = 900 + Math.floor(Math.random() * 400); // 900-1300 sq ft\n            const bathrooms = Math.random() > 0.4 ? 2.0 : 1.5; // 60% chance of 2 bath, 40% chance of 1.5\n            \n            // Recent renovation chance (higher for more expensive units)\n            const renovationChance = (finalPrice - 4400) / 800; // 0-1 based on price\n            const recentlyRenovated = Math.random() < (0.3 + renovationChance * 0.4);\n            \n            // Recent posting (some apartments are newer listings)\n            const daysAgo = Math.floor(Math.random() * 30); // 0-30 days ago\n            const datePosted = new Date(Date.now() - daysAgo * 24 * 60 * 60 * 1000);\n            \n            const apartment = {\n                id: `apt_${zipCode}_${i}_${Date.now()}`,\n                title: `${buildingType} in ${areaData.areaName}`,\n                address: `${buildingNumber} ${streetName}, ${areaData.areaName}, CA ${zipCode}`,\n                zipCode: zipCode,\n                price: finalPrice,\n                bedrooms: 2,\n                bathrooms: bathrooms,\n                sqft: sqft,\n                floor: floor,\n                features: selectedAmenities,\n                highlightFeatures: this.getHighlightFeatures(selectedAmenities),\n                recentlyRenovated: recentlyRenovated,\n                premiumAmenities: selectedAmenities.includes('Swimming Pool') || \n                                selectedAmenities.includes('Fitness Center') ||\n                                selectedAmenities.includes('Parking Garage'),\n                datePosted: datePosted.toISOString(),\n                source: this.getRandomSource(),\n                contact: {\n                    phone: this.generatePhoneNumber(),\n                    email: `leasing@${buildingType.toLowerCase().replace(/\\s+/g, '')}apartments.com`\n                },\n                images: this.generateMockImages(),\n                description: this.generateDescription(buildingType, areaData.areaName, selectedAmenities),\n                score: 0 // Will be calculated later\n            };\n            \n            apartments.push(apartment);\n        }\n        \n        return apartments;\n    }\n\n    selectRandomAmenities(pool, min, max) {\n        const count = Math.floor(Math.random() * (max - min + 1)) + min;\n        const shuffled = [...pool].sort(() => 0.5 - Math.random());\n        return shuffled.slice(0, count);\n    }\n\n    getHighlightFeatures(features) {\n        const highlights = [];\n        const highlightMap = {\n            'In-Unit Washer/Dryer': 'In-Unit Washer/Dryer',\n            'Central Air Conditioning': 'Central Air Conditioning',\n            'Private Balcony': 'Private Balcony',\n            'Recently Renovated': 'Recently Renovated',\n            'Natural Light': 'Natural Light',\n            'Modern Kitchen': 'Modern Kitchen'\n        };\n        \n        features.forEach(feature => {\n            if (highlightMap[feature]) {\n                highlights.push(feature);\n            }\n        });\n        \n        return highlights;\n    }\n\n    getRandomSource() {\n        const sources = [\n            'Apartments.com', 'Westside Rentals', 'Zillow Rentals',\n            'Trulia', 'HotPads', 'Redfin', 'RentCafe', 'Zumper'\n        ];\n        return sources[Math.floor(Math.random() * sources.length)];\n    }\n\n    generatePhoneNumber() {\n        const areaCode = ['310', '424', '323'][Math.floor(Math.random() * 3)];\n        const exchange = Math.floor(Math.random() * 900) + 100;\n        const number = Math.floor(Math.random() * 9000) + 1000;\n        return `(${areaCode}) ${exchange}-${number}`;\n    }\n\n    generateMockImages() {\n        // In a real app, these would be actual image URLs\n        const imageCount = Math.floor(Math.random() * 5) + 1; // 1-5 images\n        const images = [];\n        \n        for (let i = 0; i < imageCount; i++) {\n            images.push(`https://via.placeholder.com/600x400/f0f0f0/666666?text=Apartment+Image+${i + 1}`);\n        }\n        \n        return images;\n    }\n\n    generateDescription(buildingType, area, amenities) {\n        const descriptions = [\n            `Beautiful ${buildingType.toLowerCase()} located in the heart of ${area}. This stunning 2-bedroom unit features modern finishes and premium amenities.`,\n            `Discover luxury living in this ${buildingType.toLowerCase()} in ${area}. Perfectly designed for comfort and style.`,\n            `Spacious and bright 2-bedroom apartment in a desirable ${area} location. This ${buildingType.toLowerCase()} offers the perfect blend of comfort and convenience.`\n        ];\n        \n        const baseDescription = descriptions[Math.floor(Math.random() * descriptions.length)];\n        const amenityText = amenities.slice(0, 4).join(', ');\n        \n        return `${baseDescription} Key features include: ${amenityText}. Contact us today to schedule a viewing!`;\n    }\n\n    // Removed scoreAndRankApartments - handled by external scoring module\n\n    removeDuplicates(apartments) {\n        const seen = new Set();\n        return apartments.filter(apartment => {\n            const key = `${apartment.address}_${apartment.price}_${apartment.bedrooms}`;\n            if (seen.has(key)) {\n                return false;\n            }\n            seen.add(key);\n            return true;\n        });\n    }\n\n    delay(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    // Method to validate apartment against mandatory criteria\n    validateApartment(apartment) {\n        const criteria = this.searchCriteria;\n        \n        // Check price range\n        if (apartment.price < criteria.minRent || apartment.price > criteria.maxRent) {\n            return false;\n        }\n        \n        // Check bedrooms\n        if (apartment.bedrooms !== criteria.bedrooms) {\n            return false;\n        }\n        \n        // Check bathrooms\n        if (apartment.bathrooms < criteria.minBathrooms || apartment.bathrooms > criteria.maxBathrooms) {\n            return false;\n        }\n        \n        // Check required amenities (simplified check)\n        const features = apartment.features.map(f => f.toLowerCase());\n        const hasWasherDryer = features.some(f => f.includes('washer') && f.includes('dryer'));\n        const hasAC = features.some(f => f.includes('air') || f.includes('conditioning'));\n        const hasOutdoor = features.some(f => f.includes('balcony') || f.includes('patio') || f.includes('deck'));\n        const aboveGround = apartment.floor > 1;\n        \n        if (!hasWasherDryer || !hasAC || !hasOutdoor || !aboveGround) {\n            return false;\n        }\n        \n        return true;\n    }\n}","export class ApartmentScoring {\n    constructor() {\n        this.weights = {\n            // Base criteria (50 points total)\n            rentInRange: 20,        // Within $4,400-$5,200 range\n            mandatoryAmenities: 30, // All required amenities present\n            \n            // Quality factors (35 points total)\n            renovationRecency: 25,  // Recently renovated (within 10 years)\n            naturalLight: 15,       // Natural light indicators\n            outdoorSpaceQuality: 10, // Quality of balcony/patio/terrace\n            \n            // Location factors (10 points total)\n            zipCodePriority: 10,    // Preferred zip code ranking\n            \n            // Bonus factors (15 points total)\n            premiumAmenities: 5,    // Premium building amenities\n            locationRating: 5,      // Excellent location ratings\n            professionalPhotos: 3,  // Quality listing photos\n            floorLevel: 2,          // Higher floors preferred\n        };\n        \n        this.maxScore = 100;\n    }\n\n    calculateScore(apartment, searchCriteria = {\n        minRent: 4400,\n        maxRent: 5200,\n        zipCodePriority: {\n            '90066': 1,\n            '90230': 2, \n            '90232': 3,\n            '90034': 4\n        }\n    }) {\n        let totalScore = 0;\n        let scoreBreakdown = {};\n        \n        // Base Score: Rent within range (20 points)\n        const rentScore = this.calculateRentScore(apartment.price, searchCriteria);\n        scoreBreakdown.rent = rentScore;\n        totalScore += rentScore;\n        \n        // Mandatory amenities (30 points)\n        const amenityScore = this.calculateMandatoryAmenityScore(apartment);\n        scoreBreakdown.amenities = amenityScore;\n        totalScore += amenityScore;\n        \n        // Renovation recency (25 points)\n        const renovationScore = this.calculateRenovationScore(apartment);\n        scoreBreakdown.renovation = renovationScore;\n        totalScore += renovationScore;\n        \n        // Natural light (15 points)\n        const lightScore = this.calculateNaturalLightScore(apartment);\n        scoreBreakdown.naturalLight = lightScore;\n        totalScore += lightScore;\n        \n        // Outdoor space quality (10 points)\n        const outdoorScore = this.calculateOutdoorSpaceScore(apartment);\n        scoreBreakdown.outdoorSpace = outdoorScore;\n        totalScore += outdoorScore;\n        \n        // Zip code priority (10 points)\n        const locationScore = this.calculateZipCodeScore(apartment.zipCode, searchCriteria);\n        scoreBreakdown.location = locationScore;\n        totalScore += locationScore;\n        \n        // Bonus: Premium amenities (5 points)\n        const premiumScore = this.calculatePremiumAmenitiesScore(apartment);\n        scoreBreakdown.premiumAmenities = premiumScore;\n        totalScore += premiumScore;\n        \n        // Bonus: Location rating (5 points)\n        const ratingScore = this.calculateLocationRatingScore(apartment);\n        scoreBreakdown.locationRating = ratingScore;\n        totalScore += ratingScore;\n        \n        // Bonus: Professional photos (3 points)\n        const photoScore = this.calculatePhotoScore(apartment);\n        scoreBreakdown.photos = photoScore;\n        totalScore += photoScore;\n        \n        // Bonus: Floor level preference (2 points)\n        const floorScore = this.calculateFloorScore(apartment);\n        scoreBreakdown.floor = floorScore;\n        totalScore += floorScore;\n        \n        return Math.round(Math.min(totalScore, this.maxScore));\n    }\n\n    getScoreBreakdown(apartment, searchCriteria = {\n        minRent: 4400,\n        maxRent: 5200,\n        zipCodePriority: {\n            '90066': 1,\n            '90230': 2,\n            '90232': 3, \n            '90034': 4\n        }\n    }) {\n        const breakdown = {};\n        \n        breakdown.price = this.calculateRentScore(apartment.price, searchCriteria);\n        breakdown.specs = this.calculateMandatoryAmenityScore(apartment);\n        breakdown.floor = this.calculateFloorScore(apartment);\n        breakdown.features = this.calculateRenovationScore(apartment) + \n                           this.calculateNaturalLightScore(apartment) + \n                           this.calculateOutdoorSpaceScore(apartment);\n        breakdown.renovation = apartment.recentlyRenovated ? 10 : 0;\n        \n        breakdown.total = Math.min(\n            breakdown.price + breakdown.specs + breakdown.floor + \n            breakdown.features + breakdown.renovation, \n            100\n        );\n        \n        return breakdown;\n    }\n\n    calculateRentScore(price, searchCriteria) {\n        const { minRent, maxRent } = searchCriteria;\n        \n        if (price < minRent || price > maxRent) {\n            return 0;\n        }\n        \n        const optimalRent = (minRent + maxRent) / 2;\n        const maxDeviation = (maxRent - minRent) / 2;\n        const deviation = Math.abs(price - optimalRent);\n        const score = this.weights.rentInRange * (1 - deviation / maxDeviation);\n        \n        return Math.round(score);\n    }\n\n    calculateMandatoryAmenityScore(apartment) {\n        const requiredAmenities = {\n            washerDryer: false,\n            airConditioning: false,\n            outdoorSpace: false,\n            aboveGroundFloor: false\n        };\n        \n        const features = apartment.features.map(f => f.toLowerCase());\n        \n        requiredAmenities.washerDryer = features.some(f => \n            (f.includes('washer') && f.includes('dryer')) || \n            f.includes('w/d') || \n            f.includes('laundry')\n        );\n        \n        requiredAmenities.airConditioning = features.some(f => \n            f.includes('air') || \n            f.includes('conditioning') || \n            f.includes('hvac') ||\n            f.includes('central air')\n        );\n        \n        requiredAmenities.outdoorSpace = features.some(f => \n            f.includes('balcony') || \n            f.includes('patio') || \n            f.includes('terrace') ||\n            f.includes('deck') ||\n            f.includes('outdoor')\n        );\n        \n        requiredAmenities.aboveGroundFloor = apartment.floor > 1;\n        \n        const metRequirements = Object.values(requiredAmenities).filter(Boolean).length;\n        const totalRequirements = Object.keys(requiredAmenities).length;\n        const completionRate = metRequirements / totalRequirements;\n        \n        return Math.round(this.weights.mandatoryAmenities * completionRate);\n    }\n\n    calculateRenovationScore(apartment) {\n        const features = apartment.features.map(f => f.toLowerCase());\n        \n        const renovationKeywords = [\n            'renovated', 'updated', 'remodeled', 'modern', 'new',\n            'contemporary', 'upgraded', 'refreshed', 'redesigned'\n        ];\n        \n        const hasRenovationKeywords = features.some(f => \n            renovationKeywords.some(keyword => f.includes(keyword))\n        );\n        \n        const explicitlyRenovated = apartment.recentlyRenovated || false;\n        \n        const modernAmenities = [\n            'stainless steel', 'granite', 'quartz', 'hardwood',\n            'modern kitchen', 'designer', 'luxury'\n        ];\n        \n        const hasModernAmenities = features.some(f => \n            modernAmenities.some(amenity => f.includes(amenity))\n        );\n        \n        let score = 0;\n        \n        if (explicitlyRenovated) {\n            score = this.weights.renovationRecency;\n        } else if (hasRenovationKeywords && hasModernAmenities) {\n            score = this.weights.renovationRecency * 0.8;\n        } else if (hasRenovationKeywords || hasModernAmenities) {\n            score = this.weights.renovationRecency * 0.5;\n        } else {\n            score = this.weights.renovationRecency * 0.2;\n        }\n        \n        return Math.round(score);\n    }\n\n    calculateNaturalLightScore(apartment) {\n        const features = apartment.features.map(f => f.toLowerCase());\n        const description = apartment.description?.toLowerCase() || '';\n        \n        const lightKeywords = [\n            'natural light', 'bright', 'sunny', 'light-filled',\n            'windows', 'large windows', 'floor-to-ceiling',\n            'multiple exposures', 'corner unit'\n        ];\n        \n        const lightIndicators = features.concat([description]).some(text => \n            lightKeywords.some(keyword => text.includes(keyword))\n        );\n        \n        const floorBonus = apartment.floor > 5 ? 0.2 : 0;\n        \n        let score = 0;\n        \n        if (lightIndicators) {\n            score = this.weights.naturalLight * (0.8 + floorBonus);\n        } else {\n            score = this.weights.naturalLight * (0.4 + floorBonus);\n        }\n        \n        return Math.round(score);\n    }\n\n    calculateOutdoorSpaceScore(apartment) {\n        const features = apartment.features.map(f => f.toLowerCase());\n        \n        const outdoorSpaceTypes = {\n            'private balcony': 1.0,\n            'terrace': 1.0,\n            'private patio': 0.9,\n            'deck': 0.8,\n            'balcony': 0.7,\n            'patio': 0.6,\n            'outdoor': 0.5\n        };\n        \n        let maxScore = 0;\n        \n        for (const [spaceType, multiplier] of Object.entries(outdoorSpaceTypes)) {\n            if (features.some(f => f.includes(spaceType))) {\n                maxScore = Math.max(maxScore, this.weights.outdoorSpaceQuality * multiplier);\n            }\n        }\n        \n        return Math.round(maxScore);\n    }\n\n    calculateZipCodeScore(zipCode, searchCriteria) {\n        const priority = searchCriteria.zipCodePriority[zipCode] || 5;\n        const scoreMultiplier = Math.max(0, (5 - priority) / 4);\n        return Math.round(this.weights.zipCodePriority * scoreMultiplier);\n    }\n\n    calculatePremiumAmenitiesScore(apartment) {\n        const features = apartment.features.map(f => f.toLowerCase());\n        \n        const premiumAmenities = [\n            'swimming pool', 'fitness center', 'gym', 'concierge',\n            'doorman', 'roof deck', 'rooftop', 'parking garage',\n            'valet parking', 'business center', 'club room'\n        ];\n        \n        const premiumCount = features.filter(f => \n            premiumAmenities.some(amenity => f.includes(amenity))\n        ).length;\n        \n        const score = Math.min(premiumCount * 1.5, this.weights.premiumAmenities);\n        return Math.round(score);\n    }\n\n    calculateLocationRatingScore(apartment) {\n        const zipCodeRatings = {\n            '90066': 4.5,\n            '90230': 4.2,\n            '90232': 3.8,\n            '90034': 3.5\n        };\n        \n        const baseRating = zipCodeRatings[apartment.zipCode] || 3.0;\n        const priceBonus = apartment.price > 4800 ? 0.2 : 0;\n        const finalRating = Math.min(baseRating + priceBonus, 5.0);\n        const scoreMultiplier = Math.max(0, (finalRating - 3.0) / 2.0);\n        \n        return Math.round(this.weights.locationRating * scoreMultiplier);\n    }\n\n    calculatePhotoScore(apartment) {\n        const imageCount = apartment.images?.length || 0;\n        \n        if (imageCount >= 5) {\n            return this.weights.professionalPhotos;\n        } else if (imageCount >= 3) {\n            return Math.round(this.weights.professionalPhotos * 0.7);\n        } else if (imageCount >= 1) {\n            return Math.round(this.weights.professionalPhotos * 0.4);\n        } else {\n            return 0;\n        }\n    }\n\n    calculateFloorScore(apartment) {\n        const floor = apartment.floor || 2;\n        \n        if (floor >= 3 && floor <= 6) {\n            return this.weights.floorLevel;\n        } else if (floor === 2 || floor === 7 || floor === 8) {\n            return Math.round(this.weights.floorLevel * 0.7);\n        } else if (floor > 8) {\n            return Math.round(this.weights.floorLevel * 0.5);\n        } else {\n            return 0;\n        }\n    }\n}","export class UIComponents {\n    constructor() {\n        this.modal = null;\n        this.toastContainer = null;\n        this.init();\n    }\n\n    init() {\n        this.modal = document.getElementById('apartmentModal');\n        this.toastContainer = document.getElementById('toastContainer');\n        this.bindGlobalEvents();\n    }\n\n    bindGlobalEvents() {\n        // Global keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            // ESC to close modal\n            if (e.key === 'Escape' && this.modal && this.modal.classList.contains('show')) {\n                this.closeModal();\n            }\n            \n            // Ctrl+F to focus on search\n            if (e.ctrlKey && e.key === 'f') {\n                e.preventDefault();\n                const searchBtn = document.getElementById('searchBtn');\n                if (searchBtn && searchBtn.style.display !== 'none') {\n                    searchBtn.focus();\n                }\n            }\n        });\n\n        // Handle window resize for responsive adjustments\n        window.addEventListener('resize', this.debounce(() => {\n            this.adjustLayoutForViewport();\n        }, 250));\n\n        // Handle scroll for sticky elements\n        window.addEventListener('scroll', this.throttle(() => {\n            this.handleScroll();\n        }, 100));\n    }\n\n    // Modal management\n    showModal(content, title = 'Details') {\n        if (!this.modal) return;\n\n        const modalTitle = this.modal.querySelector('#modalTitle');\n        const modalBody = this.modal.querySelector('#modalBody');\n\n        if (modalTitle) modalTitle.textContent = title;\n        if (modalBody) modalBody.innerHTML = content;\n\n        this.modal.style.display = 'flex';\n        setTimeout(() => {\n            this.modal.classList.add('show');\n            this.trapFocus(this.modal);\n        }, 10);\n\n        // Prevent body scroll when modal is open\n        document.body.style.overflow = 'hidden';\n    }\n\n    closeModal() {\n        if (!this.modal) return;\n\n        this.modal.classList.remove('show');\n        setTimeout(() => {\n            this.modal.style.display = 'none';\n            document.body.style.overflow = '';\n        }, 300);\n    }\n\n    // Toast notifications with enhanced features\n    showToast(message, type = 'info', duration = 4000, actions = null) {\n        if (!this.toastContainer) return;\n\n        const toast = document.createElement('div');\n        toast.className = `toast ${type}`;\n        \n        const iconMap = {\n            success: 'fa-check-circle',\n            error: 'fa-exclamation-circle',\n            warning: 'fa-exclamation-triangle',\n            info: 'fa-info-circle'\n        };\n\n        const icon = iconMap[type] || iconMap.info;\n        \n        let actionsHTML = '';\n        if (actions && actions.length > 0) {\n            actionsHTML = `\n                <div class=\"toast-actions\">\n                    ${actions.map(action => \n                        `<button class=\"toast-action\" data-action=\"${action.id}\">${action.label}</button>`\n                    ).join('')}\n                </div>\n            `;\n        }\n\n        toast.innerHTML = `\n            <div class=\"toast-content\">\n                <div class=\"toast-icon\">\n                    <i class=\"fas ${icon}\"></i>\n                </div>\n                <div class=\"toast-message\">\n                    <span>${message}</span>\n                    ${actionsHTML}\n                </div>\n                <button class=\"toast-close\">\n                    <i class=\"fas fa-times\"></i>\n                </button>\n            </div>\n        `;\n\n        // Add event listeners\n        const closeBtn = toast.querySelector('.toast-close');\n        closeBtn.addEventListener('click', () => this.removeToast(toast));\n\n        if (actions) {\n            toast.querySelectorAll('.toast-action').forEach(btn => {\n                btn.addEventListener('click', (e) => {\n                    const actionId = e.target.dataset.action;\n                    const action = actions.find(a => a.id === actionId);\n                    if (action && action.callback) {\n                        action.callback();\n                    }\n                    this.removeToast(toast);\n                });\n            });\n        }\n\n        this.toastContainer.appendChild(toast);\n        \n        // Trigger show animation\n        setTimeout(() => toast.classList.add('show'), 100);\n\n        // Auto-remove after duration\n        if (duration > 0) {\n            setTimeout(() => this.removeToast(toast), duration);\n        }\n\n        return toast;\n    }\n\n    removeToast(toast) {\n        if (!toast || !toast.parentNode) return;\n\n        toast.classList.remove('show');\n        setTimeout(() => {\n            if (toast.parentNode) {\n                toast.parentNode.removeChild(toast);\n            }\n        }, 300);\n    }\n\n    // Loading states\n    showLoadingSpinner(element, text = 'Loading...') {\n        if (!element) return;\n\n        const spinner = document.createElement('div');\n        spinner.className = 'loading-overlay';\n        spinner.innerHTML = `\n            <div class=\"spinner-container\">\n                <div class=\"spinner\"></div>\n                <span class=\"loading-text\">${text}</span>\n            </div>\n        `;\n\n        element.style.position = 'relative';\n        element.appendChild(spinner);\n\n        return spinner;\n    }\n\n    hideLoadingSpinner(element) {\n        if (!element) return;\n\n        const spinner = element.querySelector('.loading-overlay');\n        if (spinner) {\n            spinner.remove();\n        }\n    }\n\n    // Viewport and responsive utilities\n    adjustLayoutForViewport() {\n        const viewport = this.getViewportSize();\n        \n        // Adjust grid columns based on viewport\n        const resultsGrid = document.querySelector('.results-grid');\n        if (resultsGrid) {\n            if (viewport.width < 768) {\n                resultsGrid.style.gridTemplateColumns = '1fr';\n            } else if (viewport.width < 1200) {\n                resultsGrid.style.gridTemplateColumns = 'repeat(2, 1fr)';\n            } else {\n                resultsGrid.style.gridTemplateColumns = 'repeat(3, 1fr)';\n            }\n        }\n\n        // Adjust modal size on small screens\n        if (this.modal) {\n            const modalContent = this.modal.querySelector('.modal-content');\n            if (modalContent) {\n                if (viewport.width < 768) {\n                    modalContent.style.margin = '1rem';\n                    modalContent.style.maxHeight = 'calc(100vh - 2rem)';\n                } else {\n                    modalContent.style.margin = '2rem';\n                    modalContent.style.maxHeight = '90vh';\n                }\n            }\n        }\n    }\n\n    getViewportSize() {\n        return {\n            width: window.innerWidth,\n            height: window.innerHeight\n        };\n    }\n\n    // Scroll handling\n    handleScroll() {\n        const scrollY = window.scrollY;\n        \n        // Add shadow to header when scrolled\n        const header = document.querySelector('.header');\n        if (header) {\n            if (scrollY > 50) {\n                header.classList.add('scrolled');\n            } else {\n                header.classList.remove('scrolled');\n            }\n        }\n\n        // Show/hide back to top button\n        this.toggleBackToTop(scrollY > 300);\n    }\n\n    toggleBackToTop(show) {\n        let backToTopBtn = document.getElementById('backToTop');\n        \n        if (show && !backToTopBtn) {\n            backToTopBtn = document.createElement('button');\n            backToTopBtn.id = 'backToTop';\n            backToTopBtn.className = 'back-to-top';\n            backToTopBtn.innerHTML = '<i class=\"fas fa-chevron-up\"></i>';\n            backToTopBtn.addEventListener('click', () => {\n                window.scrollTo({ top: 0, behavior: 'smooth' });\n            });\n            document.body.appendChild(backToTopBtn);\n        }\n        \n        if (backToTopBtn) {\n            backToTopBtn.style.display = show ? 'block' : 'none';\n        }\n    }\n\n    // Focus management for accessibility\n    trapFocus(element) {\n        const focusableElements = element.querySelectorAll(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        );\n        \n        const firstFocusable = focusableElements[0];\n        const lastFocusable = focusableElements[focusableElements.length - 1];\n        \n        if (firstFocusable) {\n            firstFocusable.focus();\n        }\n        \n        element.addEventListener('keydown', (e) => {\n            if (e.key === 'Tab') {\n                if (e.shiftKey) {\n                    if (document.activeElement === firstFocusable) {\n                        e.preventDefault();\n                        lastFocusable.focus();\n                    }\n                } else {\n                    if (document.activeElement === lastFocusable) {\n                        e.preventDefault();\n                        firstFocusable.focus();\n                    }\n                }\n            }\n        });\n    }\n\n    // Animation utilities\n    fadeIn(element, duration = 300) {\n        element.style.opacity = '0';\n        element.style.display = 'block';\n        \n        let start = null;\n        const animate = (timestamp) => {\n            if (!start) start = timestamp;\n            const progress = (timestamp - start) / duration;\n            \n            element.style.opacity = Math.min(progress, 1);\n            \n            if (progress < 1) {\n                requestAnimationFrame(animate);\n            }\n        };\n        \n        requestAnimationFrame(animate);\n    }\n\n    fadeOut(element, duration = 300) {\n        let start = null;\n        const animate = (timestamp) => {\n            if (!start) start = timestamp;\n            const progress = (timestamp - start) / duration;\n            \n            element.style.opacity = 1 - Math.min(progress, 1);\n            \n            if (progress >= 1) {\n                element.style.display = 'none';\n            } else {\n                requestAnimationFrame(animate);\n            }\n        };\n        \n        requestAnimationFrame(animate);\n    }\n\n    slideDown(element, duration = 300) {\n        element.style.height = '0';\n        element.style.overflow = 'hidden';\n        element.style.display = 'block';\n        \n        const targetHeight = element.scrollHeight;\n        let start = null;\n        \n        const animate = (timestamp) => {\n            if (!start) start = timestamp;\n            const progress = (timestamp - start) / duration;\n            \n            element.style.height = `${targetHeight * Math.min(progress, 1)}px`;\n            \n            if (progress >= 1) {\n                element.style.height = '';\n                element.style.overflow = '';\n            } else {\n                requestAnimationFrame(animate);\n            }\n        };\n        \n        requestAnimationFrame(animate);\n    }\n\n    slideUp(element, duration = 300) {\n        const startHeight = element.offsetHeight;\n        let start = null;\n        \n        const animate = (timestamp) => {\n            if (!start) start = timestamp;\n            const progress = (timestamp - start) / duration;\n            \n            element.style.height = `${startHeight * (1 - Math.min(progress, 1))}px`;\n            element.style.overflow = 'hidden';\n            \n            if (progress >= 1) {\n                element.style.display = 'none';\n                element.style.height = '';\n                element.style.overflow = '';\n            } else {\n                requestAnimationFrame(animate);\n            }\n        };\n        \n        requestAnimationFrame(animate);\n    }\n\n    // Utility functions\n    debounce(func, wait) {\n        let timeout;\n        return function executedFunction(...args) {\n            const later = () => {\n                clearTimeout(timeout);\n                func(...args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function executedFunction(...args) {\n            if (!inThrottle) {\n                func.apply(this, args);\n                inThrottle = true;\n                setTimeout(() => inThrottle = false, limit);\n            }\n        };\n    }\n\n    // Format utilities\n    formatPrice(price) {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n        }).format(price);\n    }\n\n    formatDate(date) {\n        return new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric'\n        }).format(new Date(date));\n    }\n\n    formatPhoneNumber(phone) {\n        const cleaned = phone.replace(/\\D/g, '');\n        const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n        if (match) {\n            return `(${match[1]}) ${match[2]}-${match[3]}`;\n        }\n        return phone;\n    }\n\n    // Validation utilities\n    isValidEmail(email) {\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return re.test(email);\n    }\n\n    isValidPhone(phone) {\n        const cleaned = phone.replace(/\\D/g, '');\n        return cleaned.length === 10;\n    }\n\n    // Local storage utilities\n    saveToStorage(key, data) {\n        try {\n            localStorage.setItem(key, JSON.stringify(data));\n            return true;\n        } catch (error) {\n            console.error('Error saving to localStorage:', error);\n            return false;\n        }\n    }\n\n    loadFromStorage(key, defaultValue = null) {\n        try {\n            const data = localStorage.getItem(key);\n            return data ? JSON.parse(data) : defaultValue;\n        } catch (error) {\n            console.error('Error loading from localStorage:', error);\n            return defaultValue;\n        }\n    }\n\n    removeFromStorage(key) {\n        try {\n            localStorage.removeItem(key);\n            return true;\n        } catch (error) {\n            console.error('Error removing from localStorage:', error);\n            return false;\n        }\n    }\n}\n\n// Export for use in other modules\nexport const UI = new UIComponents();","import { ApartmentSearchEngine } from './search-engine.js';\nimport { ApartmentScoring } from './scoring.js';\nimport { UIComponents } from './ui-components.js';\n\nexport class ApartmentFinderApp {\n    constructor() {\n        this.apartments = [];\n        this.filteredApartments = [];\n        this.bookmarkedApartments = JSON.parse(localStorage.getItem('bookmarkedApartments') || '[]');\n        this.isSearching = false;\n        \n        this.init();\n    }\n\n    init() {\n        this.bindEvents();\n        this.loadBookmarks();\n        console.log('Apartment Finder App initialized');\n    }\n\n    bindEvents() {\n        // Search button\n        const searchBtn = document.getElementById('searchBtn');\n        searchBtn.addEventListener('click', () => this.startSearch());\n\n        // Filter controls\n        const sortBy = document.getElementById('sortBy');\n        sortBy.addEventListener('change', () => this.applyFilters());\n\n        const minScore = document.getElementById('minScore');\n        minScore.addEventListener('input', (e) => {\n            document.getElementById('minScoreValue').textContent = e.target.value;\n            this.applyFilters();\n        });\n\n        // Filter checkboxes\n        ['recentOnly', 'renovatedOnly', 'premiumOnly'].forEach(id => {\n            document.getElementById(id).addEventListener('change', () => this.applyFilters());\n        });\n\n        // Filter panel toggle\n        const toggleFilters = document.getElementById('toggleFilters');\n        const filterContent = document.querySelector('.filter-content');\n        toggleFilters.addEventListener('click', () => {\n            const isExpanded = filterContent.style.display !== 'none';\n            filterContent.style.display = isExpanded ? 'none' : 'block';\n            toggleFilters.innerHTML = isExpanded ? \n                '<i class=\"fas fa-chevron-down\"></i>' : \n                '<i class=\"fas fa-chevron-up\"></i>';\n        });\n\n        // Modal controls\n        const modal = document.getElementById('apartmentModal');\n        const closeModal = document.getElementById('closeModal');\n        \n        closeModal.addEventListener('click', () => this.closeModal());\n        modal.addEventListener('click', (e) => {\n            if (e.target === modal) this.closeModal();\n        });\n\n        // Export button\n        const exportBtn = document.getElementById('exportBtn');\n        exportBtn.addEventListener('click', () => this.exportResults());\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', (e) => {\n            if (e.key === 'Escape' && modal.style.display !== 'none') {\n                this.closeModal();\n            }\n            if (e.key === 'Enter' && e.ctrlKey && !this.isSearching) {\n                this.startSearch();\n            }\n        });\n    }\n\n    async startSearch() {\n        if (this.isSearching) return;\n        \n        this.isSearching = true;\n        this.showLoadingState();\n        \n        try {\n            // Initialize search engine and scoring\n            const searchEngine = new ApartmentSearchEngine();\n            const scorer = new ApartmentScoring();\n            \n            // Start search with progress updates\n            const apartments = await searchEngine.searchApartments((progress) => {\n                this.updateProgress(progress);\n            });\n            \n            // Score apartments using the scoring system\n            this.apartments = apartments.map(apt => ({\n                ...apt,\n                score: scorer.calculateScore(apt),\n                scoreBreakdown: scorer.getScoreBreakdown(apt)\n            }));\n            this.applyFilters();\n            this.showResults();\n            \n        } catch (error) {\n            console.error('Search failed:', error);\n            this.showToast('Search failed. Please try again.', 'error');\n        } finally {\n            this.isSearching = false;\n            this.hideLoadingState();\n        }\n    }\n\n    showLoadingState() {\n        const searchBtn = document.getElementById('searchBtn');\n        const loadingIndicator = document.getElementById('loadingIndicator');\n        \n        searchBtn.style.display = 'none';\n        loadingIndicator.style.display = 'block';\n        \n        // Hide results section\n        document.getElementById('resultsSection').style.display = 'none';\n        document.getElementById('filterPanel').style.display = 'none';\n    }\n\n    hideLoadingState() {\n        const searchBtn = document.getElementById('searchBtn');\n        const loadingIndicator = document.getElementById('loadingIndicator');\n        \n        searchBtn.style.display = 'inline-block';\n        loadingIndicator.style.display = 'none';\n    }\n\n    updateProgress(progress) {\n        const steps = ['step1', 'step2', 'step3', 'step4'];\n        const currentStep = Math.min(Math.floor(progress / 25), 3);\n        \n        steps.forEach((stepId, index) => {\n            const element = document.getElementById(stepId);\n            if (index < currentStep) {\n                element.className = 'step completed';\n            } else if (index === currentStep) {\n                element.className = 'step active';\n            } else {\n                element.className = 'step';\n            }\n        });\n    }\n\n    applyFilters() {\n        if (!this.apartments.length) return;\n\n        let filtered = [...this.apartments];\n        \n        // Apply score filter\n        const minScore = parseInt(document.getElementById('minScore').value);\n        filtered = filtered.filter(apt => apt.score >= minScore);\n        \n        // Apply checkbox filters\n        if (document.getElementById('recentOnly').checked) {\n            const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n            filtered = filtered.filter(apt => new Date(apt.datePosted) > weekAgo);\n        }\n        \n        if (document.getElementById('renovatedOnly').checked) {\n            filtered = filtered.filter(apt => apt.recentlyRenovated);\n        }\n        \n        if (document.getElementById('premiumOnly').checked) {\n            filtered = filtered.filter(apt => apt.premiumAmenities);\n        }\n        \n        // Apply sorting\n        const sortBy = document.getElementById('sortBy').value;\n        filtered.sort((a, b) => {\n            switch (sortBy) {\n                case 'score': return b.score - a.score;\n                case 'price-low': return a.price - b.price;\n                case 'price-high': return b.price - a.price;\n                case 'newest': return new Date(b.datePosted) - new Date(a.datePosted);\n                default: return b.score - a.score;\n            }\n        });\n        \n        this.filteredApartments = filtered;\n        this.renderResults();\n    }\n\n    showResults() {\n        document.getElementById('resultsSection').style.display = 'block';\n        document.getElementById('filterPanel').style.display = 'block';\n        \n        // Scroll to results\n        document.getElementById('resultsSection').scrollIntoView({ \n            behavior: 'smooth' \n        });\n    }\n\n    renderResults() {\n        const resultsGrid = document.getElementById('resultsGrid');\n        const recentResults = document.getElementById('recentResults');\n        const recentListings = document.getElementById('recentListings');\n        const noResults = document.getElementById('noResults');\n        const resultsCount = document.getElementById('resultsCount');\n        \n        // Update results count\n        resultsCount.textContent = `${this.filteredApartments.length} apartments found`;\n        \n        if (this.filteredApartments.length === 0) {\n            resultsGrid.innerHTML = '';\n            recentResults.innerHTML = '';\n            recentListings.style.display = 'none';\n            noResults.style.display = 'block';\n            return;\n        }\n        \n        noResults.style.display = 'none';\n        \n        // Separate recent listings (past week)\n        const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n        const recentApartments = this.filteredApartments.filter(apt => \n            new Date(apt.datePosted) > weekAgo\n        );\n        const allApartments = this.filteredApartments;\n        \n        // Render recent listings\n        if (recentApartments.length > 0) {\n            recentListings.style.display = 'block';\n            recentResults.innerHTML = recentApartments\n                .slice(0, 6)\n                .map(apt => this.createApartmentCard(apt, true))\n                .join('');\n        } else {\n            recentListings.style.display = 'none';\n        }\n        \n        // Render all results\n        resultsGrid.innerHTML = allApartments\n            .map(apt => this.createApartmentCard(apt))\n            .join('');\n        \n        // Add click events to apartment cards\n        document.querySelectorAll('.apartment-card').forEach(card => {\n            card.addEventListener('click', () => {\n                const apartmentId = card.dataset.apartmentId;\n                const apartment = this.apartments.find(apt => apt.id === apartmentId);\n                this.showApartmentDetails(apartment);\n            });\n        });\n    }\n\n    createApartmentCard(apartment, isRecent = false) {\n        const scoreClass = apartment.score >= 80 ? 'high' : \n                          apartment.score >= 60 ? 'medium' : 'low';\n        \n        const features = apartment.features.slice(0, 3).map(feature => \n            `<span class=\"feature-tag ${apartment.highlightFeatures?.includes(feature) ? 'highlight' : ''}\">${feature}</span>`\n        ).join('');\n        \n        const bookmarked = this.bookmarkedApartments.includes(apartment.id);\n        \n        return `\n            <div class=\"apartment-card fade-in\" data-apartment-id=\"${apartment.id}\">\n                <div class=\"card-image\">\n                    ${apartment.images && apartment.images.length > 0 ? \n                        `<img src=\"${apartment.images[0]}\" alt=\"${apartment.title}\" onerror=\"this.style.display='none'\">` :\n                        '<i class=\"fas fa-image\">No Image Available</i>'\n                    }\n                    <div class=\"score-badge ${scoreClass}\">${apartment.score}</div>\n                    ${bookmarked ? '<div class=\"bookmark-indicator\"><i class=\"fas fa-bookmark\"></i></div>' : ''}\n                </div>\n                <div class=\"card-content\">\n                    <h3 class=\"card-title\">${apartment.title}</h3>\n                    <p class=\"card-address\">\n                        <i class=\"fas fa-map-marker-alt\"></i>\n                        ${apartment.address}\n                    </p>\n                    \n                    <div class=\"card-details\">\n                        <div class=\"detail-item\">\n                            <i class=\"fas fa-bed\"></i>\n                            ${apartment.bedrooms} bed\n                        </div>\n                        <div class=\"detail-item\">\n                            <i class=\"fas fa-bath\"></i>\n                            ${apartment.bathrooms} bath\n                        </div>\n                        <div class=\"detail-item\">\n                            <i class=\"fas fa-ruler-combined\"></i>\n                            ${apartment.sqft || 'N/A'} sq ft\n                        </div>\n                        <div class=\"detail-item\">\n                            <i class=\"fas fa-building\"></i>\n                            Floor ${apartment.floor || 'N/A'}\n                        </div>\n                    </div>\n                    \n                    <div class=\"card-features\">\n                        ${features}\n                        ${apartment.features.length > 3 ? \n                            `<span class=\"feature-tag\">+${apartment.features.length - 3} more</span>` : \n                            ''\n                        }\n                    </div>\n                    \n                    <div class=\"card-price\">$${apartment.price.toLocaleString()}/month</div>\n                </div>\n            </div>\n        `;\n    }\n\n    showApartmentDetails(apartment) {\n        const modal = document.getElementById('apartmentModal');\n        const modalTitle = document.getElementById('modalTitle');\n        const modalBody = document.getElementById('modalBody');\n        const bookmarkBtn = document.getElementById('bookmarkBtn');\n        \n        modalTitle.textContent = apartment.title;\n        \n        const scoreClass = apartment.score >= 80 ? 'high' : \n                          apartment.score >= 60 ? 'medium' : 'low';\n        \n        const imageGallery = apartment.images && apartment.images.length > 0 ? \n            `<div class=\"image-gallery\">\n                ${apartment.images.map(img => `<img src=\"${img}\" alt=\"Apartment image\" style=\"width: 100%; margin-bottom: 1rem; border-radius: 8px;\">`).join('')}\n            </div>` : \n            '<div class=\"no-image\">No images available</div>';\n        \n        modalBody.innerHTML = `\n            ${imageGallery}\n            \n            <div class=\"apartment-details\">\n                <div class=\"detail-header\">\n                    <div class=\"score-display\">\n                        <span class=\"score-badge ${scoreClass}\">${apartment.score}</span>\n                        <span class=\"score-label\">Match Score</span>\n                    </div>\n                    <div class=\"price-display\">\n                        <span class=\"price\">$${apartment.price.toLocaleString()}</span>\n                        <span class=\"price-label\">per month</span>\n                    </div>\n                </div>\n                \n                <div class=\"address-section\">\n                    <h4><i class=\"fas fa-map-marker-alt\"></i> Address</h4>\n                    <p>${apartment.address}</p>\n                    <p><strong>Zip Code:</strong> ${apartment.zipCode}</p>\n                </div>\n                \n                <div class=\"specs-section\">\n                    <h4><i class=\"fas fa-info-circle\"></i> Specifications</h4>\n                    <div class=\"specs-grid\">\n                        <div class=\"spec-item\">\n                            <i class=\"fas fa-bed\"></i>\n                            <span>${apartment.bedrooms} Bedrooms</span>\n                        </div>\n                        <div class=\"spec-item\">\n                            <i class=\"fas fa-bath\"></i>\n                            <span>${apartment.bathrooms} Bathrooms</span>\n                        </div>\n                        <div class=\"spec-item\">\n                            <i class=\"fas fa-ruler-combined\"></i>\n                            <span>${apartment.sqft || 'N/A'} sq ft</span>\n                        </div>\n                        <div class=\"spec-item\">\n                            <i class=\"fas fa-building\"></i>\n                            <span>Floor ${apartment.floor || 'N/A'}</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"amenities-section\">\n                    <h4><i class=\"fas fa-star\"></i> Amenities & Features</h4>\n                    <div class=\"amenities-grid\">\n                        ${apartment.features.map(feature => \n                            `<div class=\"amenity-item ${apartment.highlightFeatures?.includes(feature) ? 'highlight' : ''}\">\n                                <i class=\"fas fa-check\"></i>\n                                ${feature}\n                            </div>`\n                        ).join('')}\n                    </div>\n                </div>\n                \n                ${apartment.description ? `\n                    <div class=\"description-section\">\n                        <h4><i class=\"fas fa-file-text\"></i> Description</h4>\n                        <p>${apartment.description}</p>\n                    </div>\n                ` : ''}\n                \n                <div class=\"contact-section\">\n                    <h4><i class=\"fas fa-phone\"></i> Contact Information</h4>\n                    <p><strong>Phone:</strong> ${apartment.contact?.phone || 'Not available'}</p>\n                    <p><strong>Email:</strong> ${apartment.contact?.email || 'Not available'}</p>\n                    <p><strong>Source:</strong> ${apartment.source}</p>\n                    <p><strong>Posted:</strong> ${new Date(apartment.datePosted).toLocaleDateString()}</p>\n                </div>\n            </div>\n        `;\n        \n        // Update bookmark button\n        const isBookmarked = this.bookmarkedApartments.includes(apartment.id);\n        bookmarkBtn.innerHTML = isBookmarked ? \n            '<i class=\"fas fa-bookmark\"></i> Bookmarked' : \n            '<i class=\"far fa-bookmark\"></i> Bookmark';\n        \n        bookmarkBtn.onclick = () => this.toggleBookmark(apartment.id);\n        \n        // Show modal\n        modal.style.display = 'flex';\n        setTimeout(() => modal.classList.add('show'), 10);\n    }\n\n    closeModal() {\n        const modal = document.getElementById('apartmentModal');\n        modal.classList.remove('show');\n        setTimeout(() => modal.style.display = 'none', 300);\n    }\n\n    toggleBookmark(apartmentId) {\n        const index = this.bookmarkedApartments.indexOf(apartmentId);\n        if (index > -1) {\n            this.bookmarkedApartments.splice(index, 1);\n            this.showToast('Bookmark removed', 'warning');\n        } else {\n            this.bookmarkedApartments.push(apartmentId);\n            this.showToast('Apartment bookmarked!', 'success');\n        }\n        \n        localStorage.setItem('bookmarkedApartments', JSON.stringify(this.bookmarkedApartments));\n        this.renderResults(); // Re-render to update bookmark indicators\n        \n        // Update bookmark button in modal\n        const bookmarkBtn = document.getElementById('bookmarkBtn');\n        const isBookmarked = this.bookmarkedApartments.includes(apartmentId);\n        bookmarkBtn.innerHTML = isBookmarked ? \n            '<i class=\"fas fa-bookmark\"></i> Bookmarked' : \n            '<i class=\"far fa-bookmark\"></i> Bookmark';\n    }\n\n    loadBookmarks() {\n        console.log(`Loaded ${this.bookmarkedApartments.length} bookmarked apartments`);\n    }\n\n    exportResults() {\n        if (this.filteredApartments.length === 0) {\n            this.showToast('No results to export', 'warning');\n            return;\n        }\n        \n        const exportData = this.filteredApartments.map(apt => ({\n            title: apt.title,\n            address: apt.address,\n            price: apt.price,\n            bedrooms: apt.bedrooms,\n            bathrooms: apt.bathrooms,\n            sqft: apt.sqft,\n            score: apt.score,\n            features: apt.features.join(', '),\n            contact: apt.contact?.phone || '',\n            source: apt.source,\n            datePosted: apt.datePosted\n        }));\n        \n        const csv = this.convertToCSV(exportData);\n        this.downloadCSV(csv, 'apartment-search-results.csv');\n        this.showToast('Results exported successfully!', 'success');\n    }\n\n    convertToCSV(data) {\n        const headers = Object.keys(data[0]).join(',');\n        const rows = data.map(row => \n            Object.values(row).map(value => \n                typeof value === 'string' && value.includes(',') ? \n                    `\"${value}\"` : value\n            ).join(',')\n        );\n        return [headers, ...rows].join('\\n');\n    }\n\n    downloadCSV(csv, filename) {\n        const blob = new Blob([csv], { type: 'text/csv' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.setAttribute('hidden', '');\n        a.setAttribute('href', url);\n        a.setAttribute('download', filename);\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n    }\n\n    showToast(message, type = 'success') {\n        const container = document.getElementById('toastContainer');\n        const toast = document.createElement('div');\n        toast.className = `toast ${type}`;\n        toast.innerHTML = `\n            <div class=\"toast-content\">\n                <i class=\"fas fa-${type === 'success' ? 'check-circle' : \n                                 type === 'error' ? 'exclamation-circle' : \n                                 'exclamation-triangle'}\"></i>\n                <span>${message}</span>\n            </div>\n        `;\n        \n        container.appendChild(toast);\n        setTimeout(() => toast.classList.add('show'), 100);\n        \n        setTimeout(() => {\n            toast.classList.remove('show');\n            setTimeout(() => container.removeChild(toast), 300);\n        }, 4000);\n    }\n}\n\n// Initialize app when DOM is loaded\nif (typeof window !== 'undefined') {\n    document.addEventListener('DOMContentLoaded', () => {\n        new ApartmentFinderApp();\n    });\n}","export class ClaudeIntegration {\n    constructor() {\n        this.apiKey = null; // Will be set by user in settings\n        this.baseURL = 'https://api.anthropic.com/v1/messages';\n        this.model = 'claude-3-sonnet-20240229';\n        this.maxTokens = 1000;\n        \n        this.init();\n    }\n\n    init() {\n        // Check for stored API key\n        this.apiKey = localStorage.getItem('claude_api_key');\n        \n        // Create settings panel if API key is not set\n        if (!this.apiKey) {\n            this.showAPIKeySetup();\n        }\n    }\n\n    showAPIKeySetup() {\n        const existingSetup = document.getElementById('apiKeySetup');\n        if (existingSetup) return;\n\n        const setupPanel = document.createElement('div');\n        setupPanel.id = 'apiKeySetup';\n        setupPanel.className = 'api-key-setup';\n        setupPanel.innerHTML = `\n            <div class=\"setup-content\">\n                <h3><i class=\"fas fa-key\"></i> API Configuration</h3>\n                <p>To enable Claude AI enhanced search features, please enter your Anthropic API key:</p>\n                <div class=\"input-group\">\n                    <input type=\"password\" id=\"apiKeyInput\" placeholder=\"sk-ant-api...\" />\n                    <button id=\"saveApiKey\" class=\"btn-primary\">Save</button>\n                </div>\n                <div class=\"setup-info\">\n                    <p><small>\n                        <i class=\"fas fa-info-circle\"></i>\n                        Your API key is stored locally and never shared. \n                        <a href=\"https://console.anthropic.com/\" target=\"_blank\">Get your API key here</a>\n                    </small></p>\n                </div>\n                <button id=\"skipApiKey\" class=\"btn-secondary\">Skip (Use Mock Data)</button>\n            </div>\n        `;\n\n        document.body.appendChild(setupPanel);\n\n        // Bind events\n        document.getElementById('saveApiKey').addEventListener('click', () => {\n            const apiKey = document.getElementById('apiKeyInput').value.trim();\n            if (apiKey) {\n                this.setAPIKey(apiKey);\n                setupPanel.remove();\n            }\n        });\n\n        document.getElementById('skipApiKey').addEventListener('click', () => {\n            setupPanel.remove();\n        });\n\n        document.getElementById('apiKeyInput').addEventListener('keypress', (e) => {\n            if (e.key === 'Enter') {\n                document.getElementById('saveApiKey').click();\n            }\n        });\n    }\n\n    setAPIKey(apiKey) {\n        this.apiKey = apiKey;\n        localStorage.setItem('claude_api_key', apiKey);\n        console.log('Claude API key configured');\n    }\n\n    async enhanceApartmentDescriptions(apartments) {\n        if (!this.apiKey || apartments.length === 0) {\n            return apartments; // Return as-is if no API key or no apartments\n        }\n\n        try {\n            const prompt = this.buildDescriptionEnhancementPrompt(apartments);\n            const response = await this.callClaudeAPI(prompt);\n            \n            if (response && response.enhanced_descriptions) {\n                return this.applyEnhancedDescriptions(apartments, response.enhanced_descriptions);\n            }\n        } catch (error) {\n            console.error('Error enhancing descriptions:', error);\n        }\n\n        return apartments;\n    }\n\n    async generateSearchInsights(apartments) {\n        if (!this.apiKey || apartments.length === 0) {\n            return null;\n        }\n\n        try {\n            const prompt = this.buildInsightsPrompt(apartments);\n            const response = await this.callClaudeAPI(prompt);\n            \n            return response;\n        } catch (error) {\n            console.error('Error generating insights:', error);\n            return null;\n        }\n    }\n\n    buildDescriptionEnhancementPrompt(apartments) {\n        const apartmentSummaries = apartments.slice(0, 10).map((apt, index) => ({\n            id: index,\n            title: apt.title,\n            address: apt.address,\n            price: apt.price,\n            features: apt.features.slice(0, 6),\n            score: apt.score\n        }));\n\n        return `\nYou are a real estate expert helping to enhance apartment descriptions for a luxury apartment search in West Los Angeles. \n\nHere are ${apartmentSummaries.length} apartments that match the search criteria:\n\n${JSON.stringify(apartmentSummaries, null, 2)}\n\nPlease provide enhanced descriptions for these apartments that:\n1. Highlight the most appealing features\n2. Use professional real estate language\n3. Emphasize luxury and comfort aspects\n4. Keep descriptions concise (2-3 sentences)\n5. Focus on what makes each apartment unique\n\nRespond in JSON format:\n{\n  \"enhanced_descriptions\": [\n    {\n      \"id\": 0,\n      \"enhanced_description\": \"Enhanced description here...\"\n    }\n  ]\n}\n        `;\n    }\n\n    buildInsightsPrompt(apartments) {\n        const topApartments = apartments.slice(0, 5);\n        const avgPrice = apartments.reduce((sum, apt) => sum + apt.price, 0) / apartments.length;\n        const scoreDistribution = {\n            high: apartments.filter(apt => apt.score >= 80).length,\n            medium: apartments.filter(apt => apt.score >= 60 && apt.score < 80).length,\n            low: apartments.filter(apt => apt.score < 60).length\n        };\n\n        return `\nYou are a real estate market analyst. Analyze this apartment search data for West Los Angeles and provide insights.\n\nSearch Results Summary:\n- Total apartments found: ${apartments.length}\n- Average price: $${Math.round(avgPrice)}\n- Score distribution: ${scoreDistribution.high} high-scoring, ${scoreDistribution.medium} medium-scoring, ${scoreDistribution.low} low-scoring\n\nTop 5 apartments:\n${JSON.stringify(topApartments.map(apt => ({\n    title: apt.title,\n    address: apt.address,\n    price: apt.price,\n    score: apt.score,\n    zipCode: apt.zipCode\n})), null, 2)}\n\nPlease provide:\n1. Market insights about pricing trends\n2. Best value recommendations\n3. Areas to focus on for better options\n4. Red flags to watch for\n5. Negotiation opportunities\n\nRespond in JSON format with actionable insights.\n        `;\n    }\n\n    async callClaudeAPI(prompt) {\n        if (!this.apiKey) {\n            throw new Error('API key not configured');\n        }\n\n        const response = await fetch(this.baseURL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': this.apiKey,\n                'anthropic-version': '2023-06-01'\n            },\n            body: JSON.stringify({\n                model: this.model,\n                max_tokens: this.maxTokens,\n                messages: [{\n                    role: 'user',\n                    content: prompt\n                }]\n            })\n        });\n\n        if (!response.ok) {\n            throw new Error(`API call failed: ${response.status} ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        \n        try {\n            return JSON.parse(data.content[0].text);\n        } catch (parseError) {\n            console.error('Error parsing Claude response:', parseError);\n            return { error: 'Failed to parse response' };\n        }\n    }\n\n    applyEnhancedDescriptions(apartments, enhancedDescriptions) {\n        const enhancedMap = new Map();\n        enhancedDescriptions.forEach(item => {\n            enhancedMap.set(item.id, item.enhanced_description);\n        });\n\n        return apartments.map((apartment, index) => {\n            if (index < 10 && enhancedMap.has(index)) {\n                return {\n                    ...apartment,\n                    description: enhancedMap.get(index),\n                    enhanced: true\n                };\n            }\n            return apartment;\n        });\n    }\n\n    // Smart filtering using Claude AI\n    async intelligentFilter(apartments, userQuery) {\n        if (!this.apiKey || !userQuery.trim()) {\n            return apartments;\n        }\n\n        try {\n            const prompt = `\nYou are helping filter apartment listings based on user preferences. \n\nUser query: \"${userQuery}\"\n\nAvailable apartments (showing first 20):\n${JSON.stringify(apartments.slice(0, 20).map(apt => ({\n    id: apt.id,\n    title: apt.title,\n    address: apt.address,\n    price: apt.price,\n    features: apt.features,\n    score: apt.score\n})), null, 2)}\n\nBased on the user query, rank these apartments and explain why each is relevant or not relevant.\nFocus on matching user intent, not just keywords.\n\nRespond in JSON format:\n{\n  \"filtered_apartments\": [\n    {\n      \"id\": \"apartment_id\",\n      \"relevance_score\": 85,\n      \"reason\": \"Why this apartment matches the query\"\n    }\n  ]\n}\n            `;\n\n            const response = await this.callClaudeAPI(prompt);\n            \n            if (response && response.filtered_apartments) {\n                return this.applyIntelligentFiltering(apartments, response.filtered_apartments);\n            }\n        } catch (error) {\n            console.error('Error in intelligent filtering:', error);\n        }\n\n        return apartments;\n    }\n\n    applyIntelligentFiltering(apartments, filteredResults) {\n        const relevanceMap = new Map();\n        filteredResults.forEach(result => {\n            relevanceMap.set(result.id, {\n                relevance: result.relevance_score,\n                reason: result.reason\n            });\n        });\n\n        return apartments\n            .map(apartment => {\n                const relevanceData = relevanceMap.get(apartment.id);\n                if (relevanceData) {\n                    return {\n                        ...apartment,\n                        aiRelevance: relevanceData.relevance,\n                        aiReason: relevanceData.reason\n                    };\n                }\n                return apartment;\n            })\n            .filter(apartment => apartment.aiRelevance !== undefined)\n            .sort((a, b) => (b.aiRelevance || 0) - (a.aiRelevance || 0));\n    }\n\n    // Generate personalized recommendations\n    async generateRecommendations(apartments, userPreferences = {}) {\n        if (!this.apiKey) {\n            return this.generateMockRecommendations(apartments);\n        }\n\n        try {\n            const prompt = `\nAs a real estate expert, provide personalized apartment recommendations based on user preferences and available listings.\n\nUser Preferences:\n${JSON.stringify(userPreferences, null, 2)}\n\nAvailable Apartments (top 10 by score):\n${JSON.stringify(apartments.slice(0, 10).map(apt => ({\n    title: apt.title,\n    address: apt.address,\n    price: apt.price,\n    features: apt.features,\n    score: apt.score,\n    zipCode: apt.zipCode\n})), null, 2)}\n\nProvide:\n1. Top 3 recommendations with detailed reasoning\n2. Alternative options to consider\n3. What to negotiate on\n4. Potential concerns to investigate\n\nRespond in JSON format with actionable recommendations.\n            `;\n\n            const response = await this.callClaudeAPI(prompt);\n            return response;\n        } catch (error) {\n            console.error('Error generating recommendations:', error);\n            return this.generateMockRecommendations(apartments);\n        }\n    }\n\n    generateMockRecommendations(apartments) {\n        const topApartments = apartments.slice(0, 3);\n        \n        return {\n            recommendations: topApartments.map((apt, index) => ({\n                apartment_id: apt.id,\n                ranking: index + 1,\n                reason: `High score of ${apt.score} with excellent ${apt.features.slice(0, 2).join(' and ')}`,\n                strengths: apt.features.slice(0, 3),\n                concerns: ['Verify parking availability', 'Check actual condition']\n            })),\n            market_insights: {\n                avg_price: Math.round(apartments.reduce((sum, apt) => sum + apt.price, 0) / apartments.length),\n                best_value: apartments.find(apt => apt.score > 70 && apt.price < 4700)?.id || null,\n                negotiation_tip: 'Focus on move-in incentives rather than base rent'\n            }\n        };\n    }\n\n    // Utility method to check API status\n    async testAPIConnection() {\n        if (!this.apiKey) {\n            return { success: false, error: 'No API key configured' };\n        }\n\n        try {\n            const response = await this.callClaudeAPI('Test connection. Respond with: {\"status\": \"connected\"}');\n            return { success: true, response };\n        } catch (error) {\n            return { success: false, error: error.message };\n        }\n    }\n}\n\n// Export for use in other modules\nexport const claudeAI = new ClaudeIntegration();"],"names":["ApartmentSearchEngine","constructor","this","searchCriteria","minRent","maxRent","bedrooms","minBathrooms","maxBathrooms","zipCodes","zipCodePriority","requiredAmenities","preferredFeatures","dataSources","name","priority","active","searchApartments","progressCallback","allApartments","totalSteps","length","i","zipCode","apartments","searchZipCode","push","delay","error","console","concat","validApartments","filter","validateApartment","apt","removeDuplicates","log","generateMockApartments","apartmentCount","Math","floor","random","areaData","areaName","basePrice","priceVariance","neighborhoods","streetNames","buildingTypes","amenityPool","buildingNumber","streetName","buildingType","priceOffset","price","round","finalPrice","max","min","selectedAmenities","selectRandomAmenities","sqft","bathrooms","renovationChance","recentlyRenovated","daysAgo","datePosted","Date","now","apartment","id","title","address","features","highlightFeatures","getHighlightFeatures","premiumAmenities","includes","toISOString","source","getRandomSource","contact","phone","generatePhoneNumber","email","toLowerCase","replace","images","generateMockImages","description","generateDescription","score","pool","count","sort","slice","highlights","highlightMap","forEach","feature","sources","areaCode","exchange","number","imageCount","area","amenities","descriptions","baseDescription","amenityText","join","seen","Set","key","has","add","ms","Promise","resolve","setTimeout","criteria","map","f","hasWasherDryer","some","hasAC","hasOutdoor","aboveGround","ApartmentScoring","weights","rentInRange","mandatoryAmenities","renovationRecency","naturalLight","outdoorSpaceQuality","locationRating","professionalPhotos","floorLevel","maxScore","calculateScore","totalScore","calculateRentScore","calculateMandatoryAmenityScore","calculateRenovationScore","calculateNaturalLightScore","calculateOutdoorSpaceScore","calculateZipCodeScore","calculatePremiumAmenitiesScore","calculateLocationRatingScore","calculatePhotoScore","calculateFloorScore","getScoreBreakdown","breakdown","specs","renovation","total","optimalRent","maxDeviation","deviation","abs","washerDryer","airConditioning","outdoorSpace","aboveGroundFloor","completionRate","Object","values","Boolean","keys","renovationKeywords","hasRenovationKeywords","keyword","explicitlyRenovated","modernAmenities","hasModernAmenities","amenity","_a","lightKeywords","lightIndicators","text","floorBonus","outdoorSpaceTypes","terrace","deck","balcony","patio","outdoor","spaceType","multiplier","entries","scoreMultiplier","premiumCount","baseRating","priceBonus","finalRating","modal","toastContainer","init","document","getElementById","bindGlobalEvents","addEventListener","e","classList","contains","closeModal","ctrlKey","preventDefault","searchBtn","style","display","focus","window","debounce","adjustLayoutForViewport","throttle","handleScroll","showModal","content","modalTitle","querySelector","modalBody","textContent","innerHTML","trapFocus","body","overflow","remove","showToast","message","type","duration","actions","toast","createElement","className","iconMap","success","warning","info","icon","actionsHTML","action","label","removeToast","querySelectorAll","btn","actionId","target","dataset","find","a","callback","appendChild","parentNode","removeChild","showLoadingSpinner","element","spinner","position","hideLoadingSpinner","viewport","getViewportSize","resultsGrid","width","gridTemplateColumns","modalContent","margin","maxHeight","innerWidth","height","innerHeight","scrollY","header","toggleBackToTop","show","backToTopBtn","scrollTo","top","behavior","focusableElements","firstFocusable","lastFocusable","shiftKey","activeElement","fadeIn","opacity","start","animate","timestamp","progress","requestAnimationFrame","fadeOut","slideDown","targetHeight","scrollHeight","slideUp","startHeight","offsetHeight","func","wait","timeout","args","clearTimeout","limit","inThrottle","apply","formatPrice","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatDate","date","DateTimeFormat","year","month","day","formatPhoneNumber","match","isValidEmail","test","isValidPhone","saveToStorage","data","localStorage","setItem","JSON","stringify","loadFromStorage","defaultValue","getItem","parse","removeFromStorage","removeItem","ApartmentFinderApp","filteredApartments","bookmarkedApartments","isSearching","bindEvents","loadBookmarks","startSearch","applyFilters","value","toggleFilters","filterContent","isExpanded","exportResults","showLoadingState","searchEngine","scorer","updateProgress","scoreBreakdown","showResults","hideLoadingState","loadingIndicator","currentStep","stepId","index","filtered","minScore","parseInt","checked","weekAgo","sortBy","b","renderResults","scrollIntoView","recentResults","recentListings","noResults","recentApartments","createApartmentCard","card","apartmentId","showApartmentDetails","isRecent","scoreClass","bookmarked","toLocaleString","bookmarkBtn","imageGallery","img","_b","toLocaleDateString","isBookmarked","onclick","toggleBookmark","indexOf","splice","exportData","csv","convertToCSV","downloadCSV","row","filename","blob","Blob","url","URL","createObjectURL","setAttribute","click","revokeObjectURL","container","apiKey","baseURL","model","maxTokens","showAPIKeySetup","setupPanel","trim","setAPIKey","enhanceApartmentDescriptions","prompt","buildDescriptionEnhancementPrompt","response","callClaudeAPI","enhanced_descriptions","applyEnhancedDescriptions","generateSearchInsights","buildInsightsPrompt","apartmentSummaries","topApartments","avgPrice","reduce","sum","scoreDistribution","high","medium","low","Error","fetch","method","headers","max_tokens","messages","role","ok","status","statusText","json","parseError","enhancedDescriptions","enhancedMap","Map","item","set","enhanced_description","get","enhanced","intelligentFilter","userQuery","filtered_apartments","applyIntelligentFiltering","filteredResults","relevanceMap","result","relevance","relevance_score","reason","relevanceData","aiRelevance","aiReason","generateRecommendations","userPreferences","generateMockRecommendations","recommendations","apartment_id","ranking","strengths","concerns","market_insights","avg_price","best_value","negotiation_tip","testAPIConnection"],"mappings":"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"}